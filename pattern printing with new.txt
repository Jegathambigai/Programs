int i,j,n,start,end,s1,e1,n1,a[1000][1000];
scanf("%d", &n);
// Complete the code to print the pattern.
start=0;
end=2*n-1;
s1=start;
e1=end;
n1=n;

for(int k=0;k<n1;k++){
    
for(i=start;i<end;i++){
    for(j=start;j<end;j++){
        if(i==start||j==start||i==end-1||j==end-1){
            a[i][j]=n;
        
        }
    }
}  

  start=start+1;
  end=end-1;
  n=n-1;
}
  
for(i=s1;i<e1;i++){
    for(j=s1;j<e1;j++)
        printf("%d ",a[i][j]);
        printf("\n");
}


  
return 0;






#include <stdio.h>
#include <stdlib.h>

int main() 
{
    int i, j, n, start, end, s1, e1, n1;
    int **a; // declare a pointer to a 2D array

    // Accept user input for the value of n
    scanf("%d", &n);

    // Allocate memory for the 2D array
    a = (int **)malloc((2 * n - 1) * sizeof(int *));
    for (i = 0; i < 2 * n - 1; i++) {
        a[i] = (int *)malloc((2 * n - 1) * sizeof(int));
    }

    start = 0;
    end = 2 * n - 1;
    s1 = start;
    e1 = end;
    n1 = n;

    for (int k = 0; k < n1; k++) {
        for (i = start; i < end; i++) {
            for (j = start; j < end; j++) {
                if (i == start || j == start || i == end - 1 || j == end - 1) {
                    a[i][j] = n;
                }
            }
        }
        start = start + 1;
        end = end - 1;
        n = n - 1;
    }

    for (i = s1; i < e1; i++) {
        for (j = s1; j < e1; j++)
            printf("%d ", a[i][j]);
        printf("\n");
    }

    // Free the allocated memory
    for (i = 0; i < 2 * n - 1; i++) {
        free(a[i]);
    }
    free(a);

    return 0;
}
